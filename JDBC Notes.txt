What is JDBC?
JDBC refers to the Java Database Connectivity. It provides java API that allows Java programs to access database management systems 
(relational database). The JDBC API consists of a set of interfaces and classes which enables java programs to execute SQL statements. 
Interfaces and classes in JDBC API are written in java.

1. JDBC Drivers: 
JDBC driver is a collection of classes which implements interfaces defined in the JDBC API for opening database 
connections, interacting with database and closing database connections.

2. Connections: 
Before performing any database operation via JDBC, we have to open a database connection. To open a database connection 
we can call getConnection() method of DriverManager class. 

Syntax:
Connection connection = DriverManager.getConnection(url, user, password)
 

3. Statements:
The JDBC statements are used to execute the SQL or PL/SQL queries against the database. We need a statement for every single query. 
JDBC API defines the Statement, CallableStatement, and PreparedStatement types of statements.

4. ResultSets: A query returns the data in the form of ResultSet. To read the query result date ResultSet provides a cursor that 
points to the current row in the result set.


Steps of jdbc:
1.load and reigtser the driver.
2.establish the connection.
3.create statement.
4.execute query.
5.process the result.
6.close the connection.

Prepared statement:
The JDBC PreparedStatement is used to execute parameterized queries against the database. PreparedStatement is an interface 
which provides the methods to execute parameterized queries. A parameter is represented by ? symbol in JDBC. 
PreparedStatement extends the Statement interface. We can get a PreparedStatement object by invoking the prepareStatement() method 
of Connection interface.

Syntax:

PreparedStatement pstmt = conn.prepareStatement(SQL);

Difference between statement and prepared statement:

Statement	                                                          PreparedStatement
It is used when SQL query is to be executed only once.	                It is used when SQL query is to be executed multiple times.
You can not pass parameters at runtime.	                                You can pass parameters at runtime.
Used for CREATE, ALTER, DROP statements.	                        Used for the queries which are to be executed multiple times.
Performance is very low.	                                        Performance is better than Statement.
It is base interface.	                                                It extends statement interface.
Used to execute normal SQL queries.	                                Used to execute dynamic SQL queries.
It is used for DDL statements.	                                        It is used for any SQL Query.
We can not use statement for writing binary data.	                We can use Preparedstatement for writing binary data.